import com.sun.jini.start.ServiceDescriptor;
import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerServiceDescriptor;
import sorcer.resolver.Resolver;
import sorcer.util.Artifact;

com.sun.jini.start {
    policy = "${java.security.policy}";
    runtimeClasspath = Artifact.getSosPlatform().toString()

	serviceDescriptors = new ServiceDescriptor[] {
		new SorcerServiceDescriptor(
			Booter.getCodebase(new String[]{
 			    "org.sorcersoft.sorcer:ju-arithmetic-api",
 			    "org.sorcersoft.sorcer:sos-platform",
 			    "org.sorcersoft.sorcer:sos-env"
            },
			policy,
			Resolver.resolveClassPath(new String[] {
			    "org.sorcersoft.sorcer:ju-arithmetic-api",
			    "org.sorcersoft.sorcer:ju-arithmetic-prv",
                runtimeClasspath
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "classpath://config/adder-prv.config" }
        ),


		new SorcerServiceDescriptor(
            Booter.resolveCodebase(new String[]{
 			    "org.sorcersoft.sorcer:ju-arithmetic-api",
 			    "org.sorcersoft.sorcer:sos-platform"
            }),
			policy,
			Resolver.resolveClassPath(new String[] {
			    "org.sorcersoft.sorcer:ju-arithmetic-api",
			    "org.sorcersoft.sorcer:ju-arithmetic-prv",
                runtimeClasspath
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "classpath://config/multiplier-prv.config" }
       ),

        new SorcerServiceDescriptor(
            Booter.resolveCodebase(new String[]{
 			    "org.sorcersoft.sorcer:ju-arithmetic-api",
 			    "org.sorcersoft.sorcer:sos-platform"
            }),
			policy,
            Resolver.resolveClassPath(new String[] {
			    "org.sorcersoft.sorcer:ju-arithmetic-api",
			    "org.sorcersoft.sorcer:ju-arithmetic-prv",
			    runtimeClasspath
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "classpath://config/divider-prv.config" }
        ),

        new SorcerServiceDescriptor(
            Booter.resolveCodebase(new String[]{
		       "org.sorcersoft.sorcer:ju-arithmetic-api",
               "org.sorcersoft.sorcer:sos-platform"
            }),
            policy,
                Resolver.resolveClassPath(new String[] {
                    "org.sorcersoft.sorcer:ju-arithmetic-api",
                    "org.sorcersoft.sorcer:ju-arithmetic-prv",
                    runtimeClasspath
		        }),
		        "sorcer.core.provider.ServiceTasker",
		        new String[] { "classpath://config/subtractor-prv.config" }
        )
    };
}
