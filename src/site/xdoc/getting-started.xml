<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Getting Started with Sorcer</title>
        <author email="pawel.rubach@sorcersoft.com">Pawe≈Ç Rubach</author>
    </properties>
    <body>
        <h1 id="Getting_started_with_Sorcer">Getting started with Sorcer</h1>
        <h2 id="Prerequisites">Prerequisites</h2>
        <ul>
            <li>
                <a href="http://java.oracle.com">Java JDK 1.6 or newer, preferably Oracle Java JDK 1.7.</a>
            </li>
            <li>
                <a href="http://maven.apache.org">Maven 3.0</a>
            </li>
            <li>
                <a href="http://maven.apache.org">Ant 1.7 or newer</a>
            </li>
        </ul>
        <p>Sorcer is cross-platform, so any OS supporting Java 1.6 or higher should be ok but the current distribution
            was tested on Windows XP/7 32/64bit, Linux (Debian/Ubuntu/Centos) 32/64bit and Mac OS X 10.5.x.
        </p>
        <h2 id="Installation">Installation</h2>
        <h3 id="Distribution">Distribution</h3>
        <p>Go to our<a href="download.html">download page</a>and pick the most suitable distribution:
        </p>
        <ul>
            <li>if you're running Windows - use the Windows EXE setup file</li>
            <li>on other OSes use the JAR installer. After you've downloaded the file you can try double-clicking it,
                however, depending on your OS configuration this may not invoke the installer. In that case open a
                terminal window and run
                <pre>java -jar sorcer-1.0-setup.jar</pre>
            </li>
            <li>if you prefer a manual install please use the zip file.</li>
        </ul>
        <h3 id="Installation_on_a_headless_machine">Installation on a headless machine</h3>
        <p>If you only have a console based (headless) access to a machine you can perform the installation using the
            text-based installer by invoking:
        </p>
        <pre>java -Djava.awt.headless=true -jar sorcer-1.0-setup.jar</pre>
        <h3 id="Setting_SORCER_HOME_environment_variable">Setting SORCER_HOME environment variable</h3>
        <p>After the installation it is recommended to set the SORCER_HOME environment variable to point to the main
            sorcer folder, for example: /home/user/sorcer.
        </p>
        <p>This step may be omitted on Windows as the Windows installer adds the SORCER_HOME variable automatically, it
            is, however, required to logout and log back in after the installation to make sure this change is updated
            in your environment.
        </p>
        <p>On UNIX there are many ways to do it depending on your OS and configuration. You can add it</p>
        <ul>
            <li>system-wide to /etc/environment, or create a /etc/profile.d/sorcer.sh script</li>
            <li>per user - by adding it to .profile or .bash_profile etc.</li>
        </ul>
        <p>The SORCER_HOME variable is not necessary if you only plan to use the basic Sorcer services provided in the
            distribution, however, if you'd like to build and run examples or your own service providers you have to add
            SORCER_HOME to your environment.
        </p>
        <h2 id="Files_and_folders_in_the_Sorcer_installation_folder">Files and folders in the Sorcer installation
            folder
        </h2>
        <p>The Sorcer installation directory (SORCER_HOME) contains the following folders:</p>
        <ul>
            <li>bin - startup scripts</li>
            <li>configs - configuration files
                <ul>
                    <li>\ sorcer.env - the main Sorcer environment config file</li>
                    <li>\ sorcer.logging - Sorcer logging levels config</li>
                </ul>
            </li>
            <li>docs - documentation and license files</li>
            <li>examples - examples that demonstrate how to create services in Sorcer
                <ul>
                    <li>\ prepare-repository.xml - ant script that should be invoked before starting to play with
                        examples.
                    </li>
                </ul>
            </li>
            <li>lib - directory with all sorcer and third-party jar files</li>
            <li>logs - empty directory for logs</li>
            <li>Uninstaller - not available if you've installed Sorcer from a zip file.
                <ul>
                    <li>\ Uninstaller.jar - application that performs an uninstall of Sorcer</li>
                </ul>
            </li>
        </ul>
        <h2 id="Starting_Sorcer">Starting Sorcer</h2>
        <p>The SORCER_HOME/bin folder contains startup scripts. For basic commands both OS-dependent shell scripts are
            provided as well as cross-platform Ant scripts.
        </p>
        <ul>
            <li>To start the basic Sorcer services together with the codeserver that serves jar files using http please
                run:
            </li>
        </ul>
        <pre>SORCER_HOME/bin/sorcer-boot
        </pre>
        <ul>
            <li>You may also start the codeserver separately by running:</li>
        </ul>
        <pre>ant -f webster-run.xml
        </pre>
        <p>and then start the basic services without the codeserver by running:</p>
        <pre>SORCER_HOME/bin/sorcer-boot-no-http
        </pre>
        <ul>
            <li>To start the Sorcer Service Browser run:</li>
        </ul>
        <pre>SORCER_HOME/bin/sorcer-browser
        </pre>
        <ul>
            <li>To start the Sorcer Network Shell please run:</li>
        </ul>
        <pre>SORCER_HOME/bin/nsh
        </pre>
        <p>On UNIX you can use the rlwrap utility to enable the history of executed commands etc. You can let the
            Network Shell start with rlwrap, for example, by adding the following alias to your shell's configuration
            file (.bashrc or .profile):
        </p>
        <pre>alias nsh='rlwrap $SORCER_HOME/bin/nsh'
        </pre>
    </body>
</document>