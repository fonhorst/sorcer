<assembly>
    <!--<id>bin</id>-->
    <!-- We dont use the <id> element to avoid the extension to the directory
         and zip name -->
    <formats>
        <format>dir</format>
        <!--<format>zip</format>-->
    </formats>
    <includeBaseDirectory>false</includeBaseDirectory>
    <files>
        <file>
            <source>${basedir}/../pom.xml</source>
            <outputDirectory>/configs/poms</outputDirectory>
            <destName>sorcer-main.pom</destName>
        </file>
        <!-- Copy the logging configuration file -->
        <file>
            <source>${basedir}/src/main/configs/sorcer.logging</source>
            <outputDirectory>/configs/</outputDirectory>
            <destName>sorcer.logging</destName>
        </file>
    </files>
    <fileSets>

<!--        <fileSet>
            <directory>${basedir}/..</directory>
            <includes>
                <include>LICENSE.txt</include>
                <include>NOTICE.txt</include>
                <include>index.html</include>
            </includes>
            <outputDirectory>/</outputDirectory>
        </fileSet>-->

        <!-- docs directory -->
<!--
        <fileSet>
            <directory>${basedir}/../deploy</directory>
            <includes>
                <include>**</include>
            </includes>
            &lt;!&ndash;<filtered>true</filtered>
            <fileMode>0644</fileMode>&ndash;&gt;
            <outputDirectory>/deploy</outputDirectory>
        </fileSet>
-->

        <!-- examples -->
        <fileSet>
            <directory>${basedir}/../examples/</directory>
            <outputDirectory>/examples</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <excludes>
                <exclude>pom.xml</exclude>
                <exclude>*.iml</exclude>
                <exclude>first/**</exclude>
                <exclude>first</exclude>
            </excludes>
            <filtered>false</filtered>
        </fileSet>
        <fileSet>
            <directory>${basedir}/src/main/examples</directory>
            <outputDirectory>/examples</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <filtered>true</filtered>
        </fileSet>

        <!-- policy directory -->
        <fileSet>
            <directory>${basedir}/src/main/policy</directory>
            <includes>
                <include>policy.all</include>
            </includes>
            <filtered>true</filtered>
            <fileMode>0644</fileMode>
            <outputDirectory>/policy</outputDirectory>
        </fileSet>

        <!-- Configuration files -->
        <fileSet>
            <directory>${basedir}/../configs/</directory>
            <outputDirectory>/configs</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <excludes>
                <exclude>sorcer.env</exclude>
                <exclude>sorcer.logging</exclude>
            </excludes>
            <filtered>false</filtered>
        </fileSet>
        <fileSet>
            <directory>${basedir}/src/main/configs</directory>
            <outputDirectory>/configs</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <filtered>false</filtered>
        </fileSet>

        <!-- bin files -->
        <fileSet>
            <directory>${basedir}/../bin</directory>
            <outputDirectory>/bin</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <excludes>
                <exclude>blitz/bin/blitz-all-boot.xml</exclude>
                <exclude>blitz/bin/blitz-boot-spawn.xml</exclude>
                <exclude>blitz/bin/locker-boot-spawn.xml</exclude>
                <exclude>blitz/bin/blitz.sh</exclude>
                <exclude>browser/pom.xml</exclude>
                <exclude>webster/bin/webster-run.xml</exclude>
                <exclude>shell/configs/nsh-start.config</exclude>
            </excludes>
            <filtered>false</filtered>
            <fileMode>0755</fileMode>
        </fileSet>

        <fileSet>
            <directory>${basedir}/src/main/bin</directory>
            <outputDirectory>/bin</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <filtered>false</filtered>
        </fileSet>

        <!-- empty log dir -->
        <fileSet>
            <directory>${basedir}/src/main/logs</directory>
            <outputDirectory>/logs</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <filtered>false</filtered>
        </fileSet>

        <!-- docs files-->
        <fileSet>
            <directory>${basedir}/src/main/docs</directory>
            <outputDirectory>/docs</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <filtered>false</filtered>
        </fileSet>

        <!-- Hyperic -->
        <fileSet>
            <directory>
                ${user.home}/.m2/repository/org/sorcersoft/sigar/sigar/${v.sigar}/lib
            </directory>
            <fileMode>0644</fileMode>
            <outputDirectory>lib/${org.sorcersoft.sigar}</outputDirectory>
            <excludes>
                <exclude>junit.jar</exclude>
                <exclude>log4j.jar</exclude>
            </excludes>
        </fileSet>
	
        <!-- Rio resolver files-->
        <fileSet>
	    <directory>${basedir}/../lib/rio/lib/resolver</directory>
	    <outputDirectory>/lib/rio/lib/resolver</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
            <filtered>false</filtered>
        </fileSet>


    </fileSets>

    <dependencySets>
        <!-- The lib directory are service implementation jars and their transitive requirements -->
       <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <excludes>
                <exclude>net.jini:*</exclude>
                <exclude>net.jini.lookup:*</exclude>
                <exclude>org.apache.river:*</exclude>
                <exclude>org.sorcersoft.sorcer:*</exclude>
                <exclude>org.sorcersoft.sigar:*</exclude>
                <exclude>org.rioproject.resolver:*</exclude>
                <exclude>org.rioproject:*</exclude>

                <exclude>ant:*</exclude>
                <exclude>jline:*</exclude>
                <exclude>org.codehaus.izpack:*</exclude>
                <exclude>*:zip</exclude>
                </excludes>
            <outputDirectory>lib/commons</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>

        <!-- Apache River libs -->
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <includes>
                <include>net.jini:*</include>
                <include>net.jini.lookup:*</include>
                <include>org.apache.river:*</include>
            </includes>
            <outputDirectory>lib/${org.apache.river}</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>

        <!-- SORCER libs -->
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <includes>
                <include>org.sorcersoft.sorcer:*</include>
            </includes>
            <outputDirectory>lib/${org.sorcersoft.sorcer}</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>

        <!-- Sigar - necessary for the integrated Rio -->
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <includes>
                <include>org.sorcersoft.sigar:*</include>
            </includes>
            <outputDirectory>lib/${org.sorcersoft.sigar}/lib</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>

        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <useStrictFiltering>true</useStrictFiltering>
            <includes>
                <include>org.rioproject.resolver:*</include>
                <include>org.rioproject:*</include>
            </includes>
            <outputDirectory>lib/${org.rioproject}</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>

    </dependencySets>

</assembly>

