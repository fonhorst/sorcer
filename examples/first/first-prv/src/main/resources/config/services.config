import java.net.URL;
import com.sun.jini.start.ServiceDescriptor;
import sorcer.provider.boot.SorcerDescriptorUtil;
import sorcer.provider.boot.SorcerServiceDescriptor;
import sorcer.core.SorcerEnv;
import sorcer.resolver.Resolver;
import sorcer.util.Artifact;
import sorcer.util.ArtifactCoordinates;
import sorcer.provider.boot.Booter;

com.sun.jini.start {
	home = "${sorcer.home}";
	policy = "${java.security.policy}";

	port = 0;

	serviceDescriptors = new ServiceDescriptor[] {
		/* SORCER Webster, set to serve up root directories */
		// (String policy, int port, String[] roots)
		SorcerDescriptorUtil.getWebster(policy, port, Booter.getWebsterHostName(), SorcerEnv.getWebsterRoots()),

	    new SorcerServiceDescriptor(
	      	Resolver.resolveCodeBase(
	      		new ArtifactCoordinates[]{
	      			ArtifactCoordinates.coords("org.apache.river:reggie-dl")
	      		}
	      	),
            policy,
            Resolver.resolveClassPath(
            	new ArtifactCoordinates[]{
            		ArtifactCoordinates.coords("org.apache.river:reggie")
				}
			),
            "com.sun.jini.reggie.TransientRegistrarImpl",
            new String[] { home + "/configs/jini/configs/reggie.config" }
		),

		new SorcerServiceDescriptor(
			Resolver.resolveCodeBase(
				new ArtifactCoordinates[]{
					ArtifactCoordinates.coords("com.example.sorcer:first-api:1.0-SNAPSHOT"),
//					ArtifactCoordinates.coords("net.jini.lookup:serviceui"),
					Artifact.getSosPlatform()
				}
			),
			policy,
			Resolver.resolveClassPath(
				new ArtifactCoordinates[]{
					ArtifactCoordinates.coords("com.example.sorcer:first-api:1.0-SNAPSHOT"),
					ArtifactCoordinates.coords("com.example.sorcer:first-prv:1.0-SNAPSHOT")
				}
			),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "classpath:/config/SampleService.config" }
		)
	};
}
