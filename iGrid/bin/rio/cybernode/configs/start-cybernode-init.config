import java.net.URL;
import org.jini.rio.boot.BootUtil;
import org.jini.rio.boot.RioServiceDescriptor;
import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {
    static port = BootUtil.getAnonymousPort();
    static jiniLibPath = "${JINI_HOME}${/}lib";
    static rioLibPath = "${RIO_HOME}${/}lib";
    static policy = "${RIO_HOME}${/}policy${/}sorcer.policy";    

    /* Set up Rio Webster attributes */
    static webster = "${RIO_HOME}${/}lib${/}webster.jar";

    /* Set up Rio Cybernode attributes */
    static cybernodeClasspath = "${RIO_HOME}${/}lib${/}cybernode.jar";
    static cybernodeCodebase = BootUtil.getCodebase(new String[] {
                                                       "cybernode-dl.jar", 
                                                       "rio-dl.jar",
                                                       "platform-capabilities.jar"},
                                                    port);
    static cybernodeConfig = "${RIO_HOME}${/}configs${/}cybernode.config";

    static serviceDescriptors = new ServiceDescriptor[] {
        /* Rio Webster, set to serve up 2 directories */
        new NonActivatableServiceDescriptor("",
                                            policy,
                                            webster,
                                            "org.jini.rio.tools.webster.Webster",
                                            new String[]{
                                                "-port", port,
                                                "-roots",
                                                ConfigUtil.concat(new Object[] {
                                                                      jiniLibPath,
                                                                      ";",
                                                                      rioLibPath})
                                            }),

        /* Rio Cybernode */
        new RioServiceDescriptor(cybernodeCodebase, 
                                 policy, 
                                 cybernodeClasspath,
                                 "org.jini.rio.cybernode.CybernodeImpl",
                                 new String[] {cybernodeConfig})
    };    

}

/* Declare Common JARs to load */   
org.jini.rio.boot {
    commonJARs = new URL[] {
        BootUtil.fileToURL("${RIO_HOME}${/}lib${/}rio.jar"),
        BootUtil.fileToURL("${RIO_HOME}${/}lib${/}platform-capabilities.jar")        
    };
}  
