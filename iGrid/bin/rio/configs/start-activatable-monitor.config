/*
 * This configuration is used by the com.sun.jini.start utility to start an
 * Activatable Provision Monitor
 */
import org.rioproject.boot.BootUtil;
import org.rioproject.boot.RioActivatableServiceDescriptor;
import com.sun.jini.start.SharedActivatableServiceDescriptor;
import com.sun.jini.start.SharedActivationGroupDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import java.net.URL;

com.sun.jini.start {
    /* Configure the codebase */
    static port = "9010";
    policy = "${RIO_HOME}${/}policy${/}sorcer.policy";
    /* Configure the SharedGroup attributes */
    groupCodebase = BootUtil.getCodebase("group-dl.jar", port);
    groupClasspath = BootUtil.getClasspath(new String[] {
                                               "${RIO_HOME}${/}lib${/}boot.jar",
                                               "${JINI_HOME}${/}lib${/}start.jar",
                                               "${JINI_HOME}${/}lib${/}jsk-platform.jar"
                                         });
    groupPersistenceDirectory = "${RIO_HOME}${/}logs/act-monitor.log";

    /* System properties for the activation group */
    sysProperties = new String[] {
        "JINI_HOME", "${JINI_HOME}",
        "RIO_HOME", "${RIO_HOME}",
        "RIO_LOG_DIR", "${RIO_LOG_DIR}",
        "java.protocol.handler.pkgs", "net.jini.url"
    };    

    /* Load the overrides */
    overrideFile = "${RIO_HOME}${/}config${/}overrides${/}persistent-overrides.properties";
    static overrides = BootUtil.parseOverrides(overrideFile);

    reggieCodebase = BootUtil.getCodebase(new String[] {"reggie-dl.jar",
                                                        "jsk-dl.jar"},
                                          port);
    reggieClasspath = "${JINI_HOME}${/}lib${/}reggie.jar";

    /* Assemble Reggie configuration arguments */
    reggieConfig = "${RIO_HOME}${/}config${/}reggie.config";
    reggieConfigArgs = BootUtil.createConfigArgs(reggieConfig, overrides);

    monitorCodebase = BootUtil.getCodebase(new String[] {
                                                       "monitor-dl.jar", 
                                                       "rio-dl.jar",
                                                       "jsk-dl.jar"},
                                                  port);    
    monitorClasspath = "${RIO_HOME}${/}lib${/}monitor.jar";

    /* Assemble Provision Monitor configuration arguments */
    monitorConfig = "${RIO_HOME}${/}config${/}monitor.config";
    monitorConfigArgs = BootUtil.createConfigArgs(monitorConfig, overrides);

    serviceDescriptors = new ServiceDescriptor[] {
    
        new SharedActivationGroupDescriptor(policy, 
                                            groupClasspath, 
                                            groupPersistenceDirectory,
                                            null,         /* serverCommand */
                                            null,         /* serverOptions */
                                            sysProperties /* serverProperties */),        

        /* Rio Provision Monitor */
        new RioActivatableServiceDescriptor(monitorCodebase,
                                            policy,
                                            monitorClasspath,
                                            "org.rioproject.monitor.ProvisionMonitorImpl",
                                            groupPersistenceDirectory,
                                            monitorConfigArgs,
                                            true),        /* restart */
        

        /* Jini Lookup Service */
        new SharedActivatableServiceDescriptor(reggieCodebase,
                                               policy,
                                               reggieClasspath,
                                               "com.sun.jini.reggie.PersistentRegistrarImpl",
                                               groupPersistenceDirectory,
                                               reggieConfigArgs,
                                               true)      /* restart */
    };    

}