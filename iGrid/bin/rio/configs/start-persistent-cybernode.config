/*
 * This configuration is used by the com.sun.jini.start utility to start a
 * Persistent Cybernode, including an embedded Webster and a JMX Connector
 * Service
 */
import java.net.URL;
import org.rioproject.boot.BootUtil;
import org.rioproject.boot.ServiceDescriptorUtil;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {
    jiniLibPath = "${JINI_HOME}${/}lib";
    jiniLibDLPath = "${JINI_HOME}${/}lib-dl";
    rioLibPath = "${RIO_HOME}${/}lib";
    policy = "${RIO_HOME}${/}policy${/}sorcer.policy";

    cybernodeConfig = "${RIO_HOME}${/}config${/}cybernode.config";
    overrideFile = "${RIO_HOME}${/}config${/}overrides${/}persistent-overrides.properties";
    overrides = BootUtil.parseOverrides(overrideFile,
                                        new String[]{"org.rioproject.cybernode"});

    cybernodeLogDir = "${RIO_HOME}${/}logs${/}cybernode.log";

    serviceDescriptors = new ServiceDescriptor[] {
        /* Rio Webster, set to serve up 2 directories */
        ServiceDescriptorUtil.getWebster(policy,
                                         "0",
                                         new String[] {jiniLibDLPath,";",
                                                       rioLibPath,";",
                                                       jiniLibPath}),
        /* Rio Cybernode */
        ServiceDescriptorUtil.getCybernode(policy, cybernodeConfig, overrides)
    };
}
