import org.jini.rio.boot.BootUtil;
import org.jini.rio.boot.RioServiceDescriptor;
import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {
    private static port = "9000";
    private static jiniLibPath = "${JINI_HOME}${/}lib";
    private static rioLibPath = "${RIO_HOME}${/}lib";
    private static policy = "${RIO_HOME}${/}policy${/}sorcer.policy";    

    /* Set up Rio Webster attributes */
    private static webster = "${RIO_HOME}${/}lib${/}webster.jar";

    /* Set up Jini Lookup Service attributes */
    private static reggieCodebase = BootUtil.getCodebase("reggie-dl.jar", port);
    private static reggieClasspath = "${JINI_HOME}${/}lib${/}reggie.jar";
    private static reggieConfig = "${RIO_HOME}${/}configs${/}reggie.config";    

    /* Set up Rio Provision Monitor attributes */
    private static monitorCodebase = BootUtil.getCodebase(new String[] {
                                                              "monitor-dl.jar", 
                                                              "rio-dl.jar"},
                                                          port);
    private static monitorClasspath = "${RIO_HOME}${/}lib${/}monitor.jar";
    private static monitorConfig = "${RIO_HOME}${/}configs${/}persistent-monitor.config";

    static serviceDescriptors = new ServiceDescriptor[] {
        /* Rio Webster, set to serve up 2 directories */
        new NonActivatableServiceDescriptor("",
                                            policy,
                                            webster,
                                            "org.jini.rio.tools.webster.Webster",
                                            new String[]{
                                                "-port", port,
                                                "-roots",
                                                ConfigUtil.concat(new Object[] {
                                                                      jiniLibPath,
                                                                      ";",
                                                                      rioLibPath})
                                            }),

        /* Jini Lookup Service */
        new NonActivatableServiceDescriptor(reggieCodebase, 
                                            policy, 
                                            reggieClasspath,
                                            "com.sun.jini.reggie.TransientRegistrarImpl",
                                            new String[] {reggieConfig}),

        /* Rio Provision Monitor */
        new RioServiceDescriptor(monitorCodebase, 
                                 policy, 
                                 monitorClasspath,
                                 "org.jini.rio.monitor.ProvisionMonitorImpl",
                                 new String[] {monitorConfig})
    };    
}

/* Declare Common JARs to load */   
org.jini.rio.boot {
    commonJARs = new URL[] {
        BootUtil.fileToURL("${RIO_HOME}${/}lib${/}rio.jar")
    };
}  
