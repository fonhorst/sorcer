/*
 * This configuration is used by the com.sun.jini.start utility to start a 
 * SORCER Webster instance
 */
import java.net.URL;
import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerDescriptorUtil;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {
 	sorcerLibPath = "${sorcer.home}${/}lib${/}sorcer${/}lib";
 	sorcerLibDlPath = "${sorcer.home}${/}lib${/}sorcer${/}lib-dl";
    jiniLibPath = "${sorcer.home}${/}lib${/}river${/}lib";
    jiniLibDLPath = "${sorcer.home}${/}lib${/}river${/}lib-dl";
    rioLibPath = "${sorcer.home}${/}lib${/}rio";
    engLibPath = "${sorcer.home}${/}lib${/}eng${/}lib";
    engLibDlPath = "${sorcer.home}${/}lib${/}eng${/}lib-dl";
    legacyLibPath = "${sorcer.home}${/}lib";   
    exLibPath="${sorcer.home}${/}lib${/}examples${/}lib";
    exLibDlPath="${sorcer.home}${/}lib${/}examples${/}lib-dl";
    dataPath = "${sorcer.home}${/}data";
    deployPath = "${sorcer.home}${/}deploy";
    policy = "${java.security.policy}";
    //provider.webster.port
	port = Booter.getWebsterPort(); 
	//provider.webster
	address = Booter.getWebsterInterface();
	startPort = Booter.getWebsterStartPort();
	endPort = Booter.getWebsterEndPort();
	
    serviceDescriptors = new ServiceDescriptor[] {
        /* SORCER Webster, set to serve up 10 directories */
        // (String policy, int port, String[] roots, String address, int startPort, int endPort, boolean debug, boolean isDaemon)
        SorcerDescriptorUtil.getWebster(policy,
                                         port,
                                         new String[] { //engLibPath,
                                                        //engLibDlPath,
                                                        sorcerLibPath,
                                         			    sorcerLibDlPath,
                                         			    jiniLibDLPath,
                                                        //rioLibPath,
                                                        jiniLibPath,
                                                        dataPath,
                                                        deployPath,
                                                        legacyLibPath,
                                                        exLibPath,
                                                        exLibDlPath },
                                         address,
                                         startPort,
                                         endPort,
                                         true,
                                         false
                                         )
    };
}  
