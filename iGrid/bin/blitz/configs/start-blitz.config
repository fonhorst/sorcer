import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.config.ConfigUtil;

// Starts up Blitz in non-activatable mode with an embedded httpd to save
// starting it up separately from the command-line. 

com.sun.jini.start {
 
    	private static iGridHome = "${sorcer.home}";
  		private static codebasePort = "9100";
  		private static lib = iGridHome + "/lib/";
  		private static commonLib = lib + "common/";
      	private static jiniLib = lib + "river/lib/";
     	private static sorcerLib = lib + "sorcer/lib/";
  	
  	   // Should be edited to point at the directory containing the je.jar
        private static dbLib = ConfigUtil.concat(new Object[] {commonLib, "je-4.1.21.jar"});

        private static blitzLib = ConfigUtil.concat(new Object[] {commonLib, "blitz/"});

	    private static otherLib = ConfigUtil.concat(new Object[] {
	                                blitzLib, "thirdpartylib/"
	                              });
	                              
  	    private static codebase = ConfigUtil.concat(new Object[] {
            "http://", ConfigUtil.getHostName(), ":", codebasePort, "/", "blitz-dl.jar", " ",
            "http://", ConfigUtil.getHostName(), ":", codebasePort, "/", "blitzui.jar", " ",
            "http://", ConfigUtil.getHostName(), ":", codebasePort, "/",
            "thirdpartylib/backport-util-concurrent60.jar"});
            
        private static separator = System.getProperty("path.separator");

 		static classpath = ConfigUtil.concat(new Object[] {
            blitzLib, "blitz.jar",
            separator, blitzLib, "blitzui.jar",
            separator, otherLib, "backport-util-concurrent60.jar",
            separator, commonLib, "sun-util.jar", separator, dbLib,
            separator, jiniLib, "jsk-lib.jar",
            separator, jiniLib, "serviceui.jar",
            separator, sorcerLib, "sorcer-prv.jar"
            });
            
        private static config = ConfigUtil.concat(new Object[] {
            iGridHome, "/bin/blitz/configs/blitz.config"});

	 	private static policy = ConfigUtil.concat(new Object[] {
            iGridHome, "/bin/blitz/policy/blitz.policy"});

         //service descriptors   
        static serviceDescriptors = new ServiceDescriptor[] {
                 // httpd
                 new NonActivatableServiceDescriptor(
                 "",
                 policy,
                 ConfigUtil.concat(new Object[] {commonLib, "tools.jar"}),
                 "com.sun.jini.tool.ClassServer",
                 new String[]{"-port",
                 codebasePort,
    			 "-dir", 
                 blitzLib,
		    	 "-verbose"}),

                 // Blitz
                 new NonActivatableServiceDescriptor(
                        codebase, policy, classpath,
                        "org.dancres.blitz.remote.BlitzServiceImpl",
                         new String[] { config })
         };
}
