<?xml version="1.0"?>
<!-- 
 * Copyright 2010 the original author or authors.
 * Copyright 2010 SorcerSoft.org.
 *  
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

How to use the common-run.xml file in your project. 
To include this file in your custom *-run-buld.xml have the import line:

  <import file="../../common-run.xml" />

If you want to start a service, add its description, similar to this:

	<target name="simple">
		<java jar="${jini.home}/lib/start.jar" fork="yes">
			<sysproperty key="java.security.policy" value="../policy/policy.all" />
			<sysproperty key="iGrid.home" value="${iGrid.home}" />
			<sysproperty key="provider.webster.url" value="${provider.webster.url}" />
			<sysproperty key="data.server.url" value="${data.server.url}" />
			<sysproperty key="java.util.logging.config.file" value="${iGrid.home}/configs/sorcer.logging" />
			<arg value="../configs/start-simple.config" />
		</java>
	</target>
	
(please see also the example silenus/configs/start-simple.config and silenus/configs/simple.config)

To run a webserver:
- define your class server port - httpd.port - as enivironmet variable IGRID_WEBSTER_PORT (recommended)
  or in $IGRID_HOME/configs/sorcer.env file.
- make sure that provider.webster.url is NOT set in sorcer.env

See how to run your webster in iGrid/sorcer/README.
To run both (webserver and service) use the XML Ant sysntax as follws:
  <target name="simplew">
		<parallel>
			<daemons>
				<ant target="webster" />
			</daemons>
		<sequential>
			<sleep seconds="3"/>
			<ant target="simple" />
	    </sequential>
		</parallel>
	</target>

-->

<project name="" default="" basedir="." xmlns:ac="antlib:net.sf.antcontrib">

	<property name="dospawn" value="false" />

	<property environment="env" />
	<property name="iGrid.home" value="${env.IGRID_HOME}" />
	<exec executable="hostname" outputproperty="hostname" />
	<echo message="Hostname = ${hostname}" />
	<echo message="env IGRID_HOME = ${iGrid.home}" />

	<loadproperties srcfile="${iGrid.home}/configs/sorcer.env" />

	<property name="v.sorcer" value="11.1" />
	<property name="v.jini" value="2.2.1" />
	<property name="v.blitz" value="2.1.7" />
	<property name="v.sleepycat" value="4.1.21" />
        <property name="v.rio" value="5.0-M2" />
	<property name="v.groovy" value="2.0.6" />

	<property name="java.home" value="${env.JAVA_HOME}" />
	<property name="rio.home" value="${env.RIO_HOME}" />
	<property name="mvn.repo" value="${env.HOME}/.m2/repository/" />
	
	<property name="jini.lib" value="${lib}/river/lib" />
	<property name="jini-dl.lib" value="${lib}/river/lib-dl" />
	<property name="jini-ext.lib" value="${lib}/river/lib-ext" />
	
	<property name="docs" value="${iGrid.home}/docs/${module.name}" />
	<property name="iGrid.policy" value="${iGrid.home}/policy" />
	<property name="iGrid.config" value="${iGrid.home}/configs" />

	<!-- Properties are IMMUTABLE. Once set it cannot be changed. Here we specify that environment variables take precedence. -->

	<condition property="localhost" value="${hostname}">
		<equals arg1="${provider.webster.interface}" arg2="$${localhost}" />
	</condition>

	<condition property="local.interface" value="${hostname}">
		<equals arg1="${provider.webster.interface}" arg2="$${localhost}" />
	</condition>

	<!--SAB -->
	<condition property="provider.webster.interface.TMP" value="${provider.webster.interface}">
		<not>
			<equals arg1="${provider.webster.interface}" arg2="$${localhost}" />
		</not>
	</condition>
	<condition property="provider.webster.interface.TMP" value="${hostname}">
		<equals arg1="${provider.webster.interface}" arg2="$${localhost}" />
	</condition>

	<echo message="provider.webster.interface.TMP = ${provider.webster.interface.TMP}" />

	<condition property="provider.webster.url" value="http://${env.IGRID_WEBSTER_INTERFACE}:${env.IGRID_WEBSTER_PORT}">
		<and>
			<isset property="env.IGRID_WEBSTER_INTERFACE" />
			<isset property="env.IGRID_WEBSTER_PORT" />
		</and>
	</condition>

	<condition property="provider.webster.url" value="http://${local.interface}:${provider.webster.port}" else="http://${provider.webster.interface}:${provider.webster.port}">
		<isset property="local.interface" />
	</condition>

	<echo message="provider.webster.url = ${provider.webster.url}" />

	<condition property="data.server.url" value="http://${env.DATA_SERVER_INTERFACE}:${env.DATA_SERVER_PORT}" else="http://${data.server.interface}:${data.server.port}">
		<and>
			<isset property="env.DATA_SERVER_INTERFACE" />
			<isset property="env.DATA_SERVER_PORT" />
		</and>
	</condition>

	<target name="groovyRun">
		<groovy src="${groovySrc}">
			<classpath>
				<pathelement location="${groovyDir}" />
			</classpath>
		</groovy>
	</target>

	<target name="set-hostname">
		<condition property="hostname" value="${env.HOST}">
			<os family="unix" />
		</condition>
		<condition property="hostname" value="${env.COMPUTERNAME}">
			<os family="windows" />
		</condition>
		<echo message="host = ${hostname}" />
	</target>
	
	<!-- jini start classpath -->
	<path id="jini.classpath">
		<pathelement location="${mvn.repo}/net/jini/jsk-platform/${v.jini}/jsk-platform-${v.jini}.jar" />
		<pathelement location="${mvn.repo}/org/apache/river/start/${v.jini}/start-${v.jini}.jar" />
		<pathelement location="${mvn.repo}/au/net/Zeus/reference-collections/1.0.1/reference-collections-1.0.1.jar" />
		<pathelement location="${mvn.repo}/com/boundary/high-scale-lib/1.0.4-SNAPSHOT/high-scale-lib-1.0.4-SNAPSHOT.jar" />
		<pathelement location="${mvn.repo}/net/jini/jsk-lib/${v.jini}/jsk-lib-${v.jini}.jar" />
		<pathelement location="${mvn.repo}/net/jini/lookup/serviceui/${v.jini}/serviceui-${v.jini}.jar" />
	</path>	
	
	<condition property="pom.file" value="pom.xml">
	  <not>
	    <isset property="pom.file" />
	  </not>
	</condition>
	
	<target name="mvn-init">   	  
	    <mvn-init/>	  
	</target>
	
	<macrodef name="mvn-init" xmlns:artifact="urn:maven-artifact-ant">
	<attribute name="run.pom.file" default="${pom.file}"/>
	<sequential>
	    <echo>run.pom.file=@{run.pom.file}</echo>
	    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
	      classpath="${mvn.repo}/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar"/>
	    <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
		<isset property="maven.repo.local"/>
	    </condition>          
	    <echo>maven.repo.local=${maven.repo.local}</echo>
	    <artifact:localRepository id="local.repository" path="${maven.repo.local}"/>
	    <artifact:pom file="@{run.pom.file}" id="maven.project"/>
	    <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile" versionsId="dependency.versions">
		<pom refid="maven.project"/>
		<localRepository refid="local.repository"/>
	    </artifact:dependencies>
	    <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
		<pom refid="maven.project"/>
		<localRepository refid="local.repository"/>
	    </artifact:dependencies>
	    <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
		<pom refid="maven.project"/>
		<localRepository refid="local.repository"/>
	    </artifact:dependencies>
	</sequential>
	</macrodef>	
	
	<macrodef name="prepare-boot" xmlns:artifact="urn:maven-artifact-ant">
	<attribute name="boot.pom.file" default="${env.IGRID_HOME}/modules/tools/boot/pom.xml"/>	
	<sequential>
	    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
	      classpath="${mvn.repo}/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar"/>
	    <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
		<isset property="maven.repo.local"/>
	    </condition>          
	    <echo>maven.repo.local=${maven.repo.local}</echo>
	    <artifact:localRepository id="local.repository" path="${maven.repo.local}"/>
	    <artifact:pom file="@{boot.pom.file}" id="maven.boot.project"/>
	    <artifact:dependencies pathId="boot.runtime.classpath" filesetId="boot.runtime.fileset" useScope="runtime">
		<pom refid="maven.boot.project"/>
		<localRepository refid="local.repository"/>
	    </artifact:dependencies>
	    <path id="boot.classpath">
		    <path refid="jini.classpath"/>
		    <path refid="boot.runtime.classpath"/>
		    <pathelement location="${mvn.repo}/org/sorcersoft/sorcer/boot/${v.sorcer}/boot-${v.sorcer}.jar" />		
	    </path>
	</sequential>
	</macrodef>
	
	
	<macrodef name="prepare-boot-and-mvn" xmlns:artifact="urn:maven-artifact-ant">
	<attribute name="boot.pom.file" default="${env.IGRID_HOME}/modules/tools/boot/pom.xml"/>	
	<attribute name="run.pom.file" default="${pom.file}"/>
	<sequential>
	    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
	      classpath="${mvn.repo}/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar"/>
	    <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
		<isset property="maven.repo.local"/>
	    </condition>          
	    <echo>maven.repo.local=${maven.repo.local}</echo>
	    <artifact:localRepository id="local.repository" path="${maven.repo.local}"/>
	    <artifact:pom file="@{boot.pom.file}" id="maven.boot.project"/>
	    <artifact:dependencies pathId="boot.runtime.classpath" filesetId="boot.runtime.fileset" useScope="runtime">
		<pom refid="maven.boot.project"/>
		<localRepository refid="local.repository"/>
	    </artifact:dependencies>
	    <!-- define boot classpath -->		
	    <path id="boot.classpath">
		    <path refid="jini.classpath"/>
		    <path refid="boot.runtime.classpath"/>
		    <pathelement location="${mvn.repo}/org/sorcersoft/sorcer/boot/${v.sorcer}/boot-${v.sorcer}.jar" />		
	    </path>

	    <!--    <property name="myclasspath" refid="boot.classpath"/>
	    <echo message="Boot Classpath = ${myclasspath}"/>-->
		
	    <artifact:pom file="@{run.pom.file}" id="maven.project"/>
	    <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile" versionsId="dependency.versions">
		<pom refid="maven.project"/>
		<localRepository refid="local.repository"/>
	    </artifact:dependencies>
	    <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
		<pom refid="maven.project"/>
		<localRepository refid="local.repository"/>
	    </artifact:dependencies>
	    <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
		<pom refid="maven.project"/>
		<localRepository refid="local.repository"/>
	    </artifact:dependencies>	
	    
	</sequential>
	</macrodef>
	
	<target name="boot.provider">
	  <java classname="com.sun.jini.start.ServiceStarter" fork="yes">
		<classpath refid="boot.classpath"/>
		<arg value="src/main/resources/config/boot.config" />
		<sysproperty key="iGrid.home" value="${iGrid.home}" />
		<sysproperty key="sorcer.env.file" value="${iGrid.home}/configs/sorcer.env" />
		<sysproperty key="java.security.policy" value="src/main/resources/policy/prv.policy" />
		<sysproperty key="java.util.logging.config.file" value="${iGrid.home}/configs/sorcer.logging" />
	  </java>
	</target>

	<target name="run.requestor" depends="mvn-init">
		<java classname="${requestor.class}" fork="yes">
		 	<classpath refid="run.classpath"/>
		  	<sysproperty key="java.util.logging.config.file" value="${iGrid.home}/configs/sorcer.logging" />
			<sysproperty key="java.security.policy" value="src/main/resources/policy/req.policy" />
			<sysproperty key="java.rmi.server.codebase" value="${requestor.codebase}" />
			<sysproperty key="sorcer.env.file" value="${iGrid.home}/configs/sorcer.env" />
		</java>
	</target>
	
</project>
