<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE opstring SYSTEM "java://org/jini/rio/dtd/rio_opstring.dtd" [
    <!-- <!ENTITY Local.IP SYSTEM "java://java.net.InetAddress.getLocalHost().getHostAddress()" > -->
    <!ENTITY Local.IP SYSTEM "java://java.lang.System.getProperty(provider.webster.interface)" >
    <!ENTITY Local.Port SYSTEM "java://java.lang.System.getProperty(provider.webster.port)" >
    <!ENTITY CodeServerURL "http://&Local.IP;:&Local.Port;/" >
    <!ENTITY group SYSTEM "java://java.lang.System.getProperty(user.name)">
]>
<opstring>
    <OperationalString Name="divider">
	   <ServiceBean Name="RIO_divider"  MatchOnName="yes">
			<!--  If the CodeBase is set as SORCER_WEBSTER,  it will be replaced by the On-DemandProvisioner with current Webster URL -->
        	<Codebase>&CodeServerURL;</Codebase>
	        <Groups>
	            <Group>sorcer.DEV</Group>
	        </Groups>
		
		  	<Interfaces>
	              <Interface>sorcer.arithmetic.provider.Divider</Interface>
	              
	              <Resources>
					<JAR>arithmetic-beans.jar</JAR>
					<JAR>sorcer-prv.jar</JAR>    	    	
	              </Resources>

	           </Interfaces>


		   <ImplementationClass Name="sorcer.core.provider.qos.QosServiceProvider">
	              <Resources>
					<JAR>arithmetic-beans.jar</JAR>
					<JAR>sorcer-prv.jar</JAR>
					<JAR>provider-ui.jar</JAR>
					<JAR>exertlet-ui.jar</JAR>
       	          </Resources>
	            </ImplementationClass>
      	            <Logging>
                      <Logger Name="org.rioproject.jsb" Level="ALL">
                          <Handler ClassName="java.util.logging.ConsoleHandler" Level="ALL"/>
                      </Logger>
                    </Logging>
             	    <Configuration>
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.*;
import sorcer.core.provider.ui.*;
import sorcer.arithmetic.provider.*;
import sorcer.arithmetic.ui.*;

sorcer.core.provider.ServiceProvider {
        /* service provider genetic properties */
		name = "Divider";
		description = "Divider - bean provider";
		location = "OTM2010";
		publishedInterfaces = new Class[] { sorcer.arithmetic.provider.Divider.class };
		
		// add service UI
		//entries = new Entry[] { ArithmeticUI.getUIDescriptor(),  
			//new Comment("It uses sorcer.arithmetic.Arithmometer for bean implementation") };

		spaceEnabled = true;
		
		// persist and reuse service ID
		providerIdPersistent = false;
		
		// service beans	
		beanClasses = new Class[] { sorcer.arithmetic.provider.DividerImpl.class }; 
		
		iconName="sorcer.jpg";
}
	     	    </Configuration>
  	        <Maintain>1</Maintain>
	      </ServiceBean>

    </OperationalString>

</opstring>
