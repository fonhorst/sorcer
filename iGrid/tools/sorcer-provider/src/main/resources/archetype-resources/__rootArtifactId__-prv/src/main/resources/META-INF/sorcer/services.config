import java.net.URL;
import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.config.ConfigUtil;
import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerDescriptorUtil;
import sorcer.provider.boot.SorcerServiceDescriptor;
import sorcer.util.ArtifactCoordinates;

com.sun.jini.start {
	home = "${iGrid.home}";
	policy = "${java.security.policy}";
	ps = System.getProperty("path.separator");
	
	// webster root directories
	jiniLibPath 	= home + "/lib/river/lib";
	jiniLibDLPath 	= home + "/lib/river/lib-dl";
	repo 			= "${user.home}/.m2/repository/";
	port = 0;
	
	serviceDescriptors = new ServiceDescriptor[] {
	      /* SORCER Webster, set to serve up root directories */
	      // (String policy, int port, String[] roots, String address, int startPort, int endPort, boolean debug)
	      SorcerDescriptorUtil.getWebster(policy, port,
					      new String[] { repo,
							      jiniLibDLPath,
							      jiniLibPath,
							      }),

	      new SorcerServiceDescriptor(
			      ""+new ArtifactCoordinates("${groupId}","${rootArtifactId}-api","${version}")
			      +" "+new ArtifactCoordinates("org.sorcersoft.sorcer","sorcer-api","11.1"),
		  policy,
		  ConfigUtil.concat(new Object[] {
		      repo, new ArtifactCoordinates("${groupId}","${rootArtifactId}-api","${version}"), ps,
		      repo, new ArtifactCoordinates("${groupId}","${rootArtifactId}-service","${version}"), ps
		  }),
		      "sorcer.core.provider.ServiceTasker",
		      new String[] { "classpath:/META-INF/sorcer/${providerInterface}.config" }
	      )
      };
}
