/** 
	The nsh shell init configuration file 
	usage, for example: nsh ../configs/nsh-init.config
*/
import net.jini.core.discovery.LookupLocator;
import javax.security.auth.login.LoginContext;
import sorcer.core.SorcerEnv;

sorcer.tools.shell.NetworkShell {

	home = "${sorcer.home}";
		
	userName = System.getProperty("user.name");
	
	mvnRepo = SorcerEnv.getRepoDir() + "/";
	
	//groups = new String[] { "sorcer.TEST10" };
	
	//locators = new LookupLocator("jini://host+port");
	
	discoveryTimeout = 5000L;
	
	httpPort = 9090;
	
	// webster root directories (codebase)
 	//sorcerLibDlPath = home + "${/}lib${/}sorcer${/}lib-dl";
	//jiniLibDLPath 	= home + "${/}lib${/}river${/}lib-dl";
	//rioLibDLPath 	= home + "${/}lib${/}rio${/}lib-dl";
	//engLibDLPath 	= home + "${/}lib${/}eng${/}lib-dl";
	///dataPath 	    = home + "${/}data";
	//httpRoots = new String[] { sorcerLibDlPath, jiniLibDLPath, engLibDLPath, dataPath };
	httpRoots = new String[] { mvnRepo };
	
	// exported classes for examples 
	httpJars = new String[] { "arithmetic-dl.jar", "whoIsIt-dl.jar", "worker-dl.jar" };
	
	noHttp = false;
	
	output = System.out;
	
	//loginContext =  new LoginContext("sorcer.tools.shell.config.ShellLoginContext");
	
	// application name/startupFile pairs for non-interactive shells, e.g., nsh --browser
	applications = new String[] { 
		"browser",  home + "${/}bin${/}browser${/}bin${/}service-browser-run-spawn.xml",
		"f1",  home + "${/}modules${/}examples${/}ex6${/}bin${/}f1-req-run.xml",
		"f5",  home + "${/}modules${/}examples${/}ex6${/}bin${/}f5-req-run.xml",
		"f5a", home + "${/}modules${/}examples${/}bin${/}f5a-req-run.xml"
		};

}