#!/bin/bash


# IGRID_HOME must be set
#
if [ "x$IGRID_HOME" == "x" ]; then
	echo "*** error: IGRID_HOME is not set; exiting in 5 seconds."
	sleep 5
	exit 1
fi


# set classpath and add sbin to path
#
source $IGRID_HOME/configs/minClasspath
export SBIN_HOME=$IGRID_HOME/sbin
export PATH=$SBIN_HOME:$PATH


# set os flags
#
UNAME_S=`uname -s`
IS_MAC=0; IS_LINUX=0; IS_WIN=0
if [ $UNAME_S == "Darwin" ]; then
	IS_MAC=1
fi
if [ $UNAME_S == "Linux" ]; then
	IS_LINUX=1
fi


# matlab dyld/ld lib flag (default is not touch) 
#
if [ "x$SET_MATLAB_DYLD_LD_LIB_PATH" == "x" ]; then
	SET_MATLAB_DYLD_LD_LIB_PATH=0
fi


# MATLAB environment
#
# LINUX: MCR_HOME must be set
#
if [ $IS_LINUX == 1 ]; then
	
	export SORCER_AMD64_LINUX_NATIVE_LIB_DIR=$IGRID_HOME/lib/native/amd64-linux
	
	if [ "x$MCR_HOME" != "x" -a $SET_MATLAB_DYLD_LD_LIB_PATH == 1 ]; then	
	
		export LD_LIBRARY_PATH=$SORCER_AMD64_LINUX_NATIVE_LIB_DIR:$MCR_HOME
		export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$MCR_HOME/v714/runtime/glnxa64
		export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$MCR_HOME/v714/sys/os/glnxa64
		export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$MCR_HOME/v714/sys/java/jre/glnxa64/jre/lib/amd64/native_threads
		export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$MCR_HOME/v714/sys/java/jre/glnxa64/jre/lib/amd64/server
		export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$MCR_HOME/v714/sys/java/jre/glnxa64/jre/lib/amd64
		export XAPPLRESDIR=$MCR_HOME/v714/X11/app-defaults

	fi
fi
 
 
# MAC: MCRROOT must be set
#
if [ $IS_MAC == 1 ]; then

	export SORCER_UNIVERSAL64_MACOSX_NATIVE_LIB_DIR=$IGRID_HOME/lib/native/universal64-macosx
	
	if [ "x$MCRROOT" != "x" -a $SET_MATLAB_DYLD_LD_LIB_PATH == 1 ]; then
	
		export DYLD_LIBRARY_PATH=$SORCER_UNIVERSAL64_MACOSX_NATIVE_LIB_DIR:${MCRROOT}/runtime/maci64;
		export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${MCRROOT}/bin/maci64 ;
		export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${MCRROOT}/sys/os/maci64;
		export XAPPLRESDIR=${MCRROOT}/X11/app-defaults;
		export SORCER_AMD64_LINUX_NATIVE_LIB_DIR=$IGRID_HOME/lib/native/universal64-macosx
		
	fi
	
fi
	